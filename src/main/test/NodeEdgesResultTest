package com.lsc

import org.apache.hadoop.io.{LongWritable, Text}
import org.apache.hadoop.mapred.{OutputCollector, Reporter}
import org.mockito.Mockito._
import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers
import org.scalatestplus.mockito.MockitoSugar

class NodeEdgesResultTest extends AnyFlatSpec with Matchers with MockitoSugar {

  "NodeEdgesResult.Map" should "process input values correctly" in {
    val mapper = new NodeEdgesResult.Map()
    val key = new LongWritable()
    val value = new Text("1 : value1 ; value2") // Replace with actual data
    val output = mock[OutputCollector[Text, Text]]
    val reporter = mock[Reporter]

    mapper.map(key, value, output, reporter)

    // Verify the expected output.collect calls or other behaviors here
    // For example:
    verify(output, times(2)).collect(any(), any()) // Replace with actual expected values and times
  }

  "NodeEdgesResult.Reduce" should "process key-values correctly" in {
    val reducer = new NodeEdgesResult.Reduce()
    val key = new Text("key")
    val values = new java.util.ArrayList[Text]()
    values.add(new Text("value1"))
    values.add(new Text("value2"))
    val output = mock[OutputCollector[Text, Text]]
    val reporter = mock[Reporter]

    reducer.reduce(key, values.iterator(), output, reporter)

    // Verify the expected output.collect calls or other behaviors here
    // For example:
    verify(output).collect(any(), any()) // Replace with actual expected values
  }
}
