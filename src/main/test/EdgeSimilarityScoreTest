package com.lsc

import org.apache.hadoop.io.{LongWritable, Text}
import org.apache.hadoop.mapred.{OutputCollector, Reporter}
import org.mockito.Mockito._
import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.should.Matchers
import org.scalatestplus.mockito.MockitoSugar

class EdgeSimilarityScoreTest extends AnyFlatSpec with Matchers with MockitoSugar {

  "EdgeSimilarityScore.Map" should "process input values correctly" in {
    val mapper = new EdgeSimilarityScore.Map()
    val key = new LongWritable()
    val value = new Text("action1 action2") // Replace with actual action data
    val output = mock[OutputCollector[Text, Text]]
    val reporter = mock[Reporter]

    // Mocking the configure method to avoid actual file reading
    doNothing().when(mapper).configure(any())

    mapper.map(key, value, output, reporter)

    // Verify the expected output.collect calls or other behaviors here
    // For example:
    verify(output).collect(any(), any()) // Replace with actual expected values
  }

  "EdgeSimilarityScore.Reduce" should "process key-values correctly" in {
    val reducer = new EdgeSimilarityScore.Reduce()
    val key = new Text("key")
    val values = new java.util.ArrayList[Text]()
    values.add(new Text("actionPair1,0.9"))
    values.add(new Text("actionPair2,0.8"))
    val output = mock[OutputCollector[Text, Text]]
    val reporter = mock[Reporter]

    reducer.reduce(key, values.iterator(), output, reporter)

    // Verify the expected output.collect calls or other behaviors here
    // For example:
    verify(output).collect(any(), any()) // Replace with actual expected values
  }
}
